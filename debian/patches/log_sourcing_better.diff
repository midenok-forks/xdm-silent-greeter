# HG changeset patch
# User ejka@imfi.kspu.ru
# Node ID 28b3145223134d9d9a32202d0bae2036572e560a
# Parent  fbeb28a122da949d0e70dd30956800ae707700d3
Applied 078_xdm_log_sourcing_better.diff

--- xdm.orig/session.c
+++ xdm/session.c
@@ -794,7 +794,7 @@
 		verify->userEnviron = setEnv(verify->userEnviron, "HOME", "/");
 	    }
 	if (verify->argv) {
-		Debug ("executing session %s\n", verify->argv[0]);
+		LogInfo ("executing session %s\n", verify->argv[0]);
 		execute (verify->argv, verify->userEnviron);
 		LogError ("Session \"%s\" execution failed (err %d)\n", verify->argv[0], errno);
 	} else {
@@ -824,21 +824,28 @@
 source (char **environ, char *file)
 {
     char	**args, *args_safe[2];
-    int		ret;
+    int		ret = 0;
+    FILE	*f;
 
     if (file && file[0]) {
-	Debug ("source %s\n", file);
-	args = parseArgs ((char **) 0, file);
-	if (!args) {
-	    args = args_safe;
-	    args[0] = file;
-	    args[1] = NULL;
+	f = fopen (file, "r");
+	if (!f)
+	    LogInfo ("not sourcing %s (%s)\n", file, _SysErrorMsg (errno));
+	else {
+	    fclose (f);
+	    LogInfo ("sourcing %s\n", file);
+	    args = parseArgs ((char **) 0, file);
+	    if (!args) {
+		args = args_safe;
+		args[0] = file;
+		args[1] = NULL;
+	    }
+	    ret = runAndWait (args, environ);
+	    freeArgs (args);
 	}
-	ret = runAndWait (args, environ);
-	freeArgs (args);
-	return ret;
-    }
-    return 0;
+    } else
+	Debug ("source() given null pointer in file argument\n");
+    return ret;
 }
 
 static int
